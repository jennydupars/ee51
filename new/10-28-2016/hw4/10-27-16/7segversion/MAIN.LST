8086/87/88/186 MACRO ASSEMBLER    MAIN                                                     00:36:45  10/29/;6  PAGE    1


DOS 5.0 (038-N) 8086/87/88/186 MACRO ASSEMBLER V3.1 ASSEMBLY OF MODULE MAIN
OBJECT MODULE PLACED IN MAIN.OBJ
ASSEMBLER INVOKED BY:  C:\UTIL\ASM86.EXE MAIN.ASM M1 DB EP


LOC  OBJ                  LINE     SOURCE

                             1             NAME            MAIN
                             2             
                             3     ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
                             4     ;                                                                            ;
                             5     ;                                                                  MAIN LOOP         
                                                           ;
                             6     ;                                  Homework 4                                    ;
                             7     ;                                   EE/CS 51                                 ;
                             8     ;                                                                            ;
                             9     ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
                            10     
                            11     
                            12     ; Description:      This program tests the display routine functions and event 
                            13     ;                                       handling code for Homework #4. This is the ma
                                   in loop, and 
                            14     ;                   it intializes the chip select logic, timers, interrupts, 
                            15     ;                   and display code. Then, it calls DisplayTest, which 
                            16     ;                                       tests each of the functions defined in displa
                                   y.asm. 
                            17     ;
                            18     ; Input:            None.
                            19     ; Output:           None.
                            20     ;
                            21     ; User Interface:   
                            22     ; Error Handling:   
                            23     ;
                            24     ; Algorithms:       None.
                            25     ; Data Structures:  None.
                            26     ;
                            27     ; Known Bugs:       None.
                            28     ; Limitations:      
                            29     ;
                            30     ; Revision History:
                            31     ;    10/27/2016         Jennifer Du     initial revision
                            32     
                            33     
                            34     ; include files
                            35 +1  $INCLUDE(display.inc)
                      =1    36     
                      =1    37     
                      =1    38     ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
                      =1    39     ;                                                                            ;
                      =1    40     ;                                  Display                                   ;
                      =1    41     ;                                Inlude File                                 ;
                      =1    42     ;                                  EE/CS 51                                  ;
                      =1    43     ;                                                                            ;
                      =1    44     ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
                      =1    45     
                      =1    46     ; This file contains the assembly language definitions for the display
                      =1    47     ; functions for homework 4.
8086/87/88/186 MACRO ASSEMBLER    MAIN                                                     00:36:45  10/29/;6  PAGE    2


LOC  OBJ                  LINE     SOURCE

                      =1    48     
  0008                =1    49     numDigits       EQU     8d                   ; number of LED digits
  0008                =1    50     numSegs         EQU     8d                 ; length of segment buffer
  0010                =1    51     numSegsBytes    EQU     16d                 ; length of segment buffer
                      =1    52     
  0008                =1    53     maxDispLength   EQU     8                   ; max ///////////////////////////////////
                                   /
                      =1    54     
  0001                =1    55     ODD_OR_EVEN_BIT_MASK    EQU  0001H          ; compare this to numbers to test if odd 
                                   or even
                      =1    56     
                      =1    57     ; Specific Digit/LED Definitions
                      =1    58     
  0000                =1    59     LED_BLANK       EQU     00000000B       ;a blank LED            
  FFA4                =1    60     IO_LED_LOC      EQU     0FFA4H          ; I/O location of the LED display
  0000                =1    61     IO_LED_VAL      EQU     0               ; value to write to LED display for correct C
                                   S
                      =1    62     
                      =1    63     ; ASCII constants
                      =1    64     
  0000                =1    65     ASCII_NULL      EQU     0000H           ; value of null character 
  0020                =1    66     ASCII_BLANK     EQU     ' '
                            67 +1  $INCLUDE(common.inc)
                      =1    68     ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
                      =1    69     ;                                                                            ;
                      =1    70     ;                                  COMMON.INC                                ;
                      =1    71     ;                                   EE/CS 51                                 ;
                      =1    72     ;                    Include file for commonly used constants                ;
                      =1    73     ;                                                                            ;
                      =1    74     ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
                      =1    75     
                      =1    76     ; This file contains commonly used constants. 
                      =1    77     
                      =1    78     ; Word and byte size:
                      =1    79     
  0002                =1    80     WORDSIZE        EQU         0002H       ; 1 word is 2 bytes
  0001                =1    81     BYTESIZE        EQU         0001H       ; 1 byte is 1 byte 
                            82     
                            83     
                            84     CGROUP  GROUP   CODE
                            85     DGROUP  GROUP   DATA, STACK
                            86     
----                        87     CODE    SEGMENT PUBLIC 'CODE'
                            88     
                            89             ASSUME  CS:CGROUP, DS:DGROUP, SS:STACK
                            90     
                            91     ;external function declarations
                            92     
                            93         ; These are contained in timer handler and event handler files
                            94         EXTRN   InitCS:NEAR             ; initializes chip select logic
                            95         EXTRN   InitTimer:NEAR          ; initializes timer
                            96         EXTRN   ClrIRQvectors:NEAR      ; intalls IllegalEventHandler for relevant 
                            97                                         ; interrupts in the vector table
                            98         EXTRN   InstallTimerHandler:NEAR; installs event handler for timer interrupt
                            99         EXTRN   IllegalEventHandler:NEAR
8086/87/88/186 MACRO ASSEMBLER    MAIN                                                     00:36:45  10/29/;6  PAGE    3


LOC  OBJ                  LINE     SOURCE

                           100         EXTRN   InitMDisplay:NEAR
                           101         
                           102         ; This was written by Prof. George
                           103         EXTRN   DisplayTest:NEAR        ; test function for display routines 
                           104         
                           105             
0000                       106     START:  
                           107     
0000                       108     MAIN:
                           109             
0000 B8----         R      110         MOV     AX, DGROUP              ;initialize the stack pointer
0003 8ED0                  111         MOV     SS, AX
0005 BCE00190       R      112         MOV     SP, OFFSET(DGROUP:TopOfStack)
                           113     
0009 B8----         R      114         MOV     AX, DGROUP              ;initialize the data segment
000C 8ED8                  115         MOV     DS, AX
                           116         
                           117     
000E E80000         E      118         CALL    InitCS                  ;initialize the 80188 chip selects
                           119                                         ;   assumes LCS and UCS already setup
                           120     
0011 E80000         E      121         CALL    ClrIRQVectors           ; initialize interrupt vector table
                           122     
0014 E80000         E      123         CALL    InstallTimerHandler     ;install the event handler
                           124                                         ;   ALWAYS install handlers before
                           125                                         ;   allowing the hardware to interrupt.
                           126     
0017 E80000         E      127         CALL    InitTimer               ;initialize the internal timer
                           128     
001A E80000         E      129         CALL    InitMDisplay
                           130     
001D FB                    131         STI                             ;and finally allow interrupts.
                           132         
                           133     
001E E80000         E      134         CALL    DisplayTest                         ; call the test code
                           135     
0021                       136     Forever: 
0021 EBFE                  137     JMP    Forever                 ;sit in an infinite loop, nothing to
                           138                                             ;   do in the background routine
0023 F4                    139             HLT                             ;never executed (hopefully)
                           140             
                           141             
                           142                     
                           143             
----                       144     CODE    ENDS
                           145     
                           146     
                           147     
                           148     
                           149     ; the data segment 
                           150     
----                       151     DATA        SEGMENT     PUBLIC      'DATA'
                           152     
----                       153     DATA        ENDS
                           154     
8086/87/88/186 MACRO ASSEMBLER    MAIN                                                     00:36:45  10/29/;6  PAGE    4


LOC  OBJ                  LINE     SOURCE

                           155     
                           156     
                           157     ;the stack
                           158     
----                       159     STACK   SEGMENT STACK  'STACK'
                           160     
0000 (80                   161             DB      80 DUP ('Stack ')       ;240 words
     537461636B20
     )
                           162     
01E0                       163             TopOfStack      LABEL   WORD
                           164     
----                       165     STACK   ENDS
                           166     
                           167             END         START

ASSEMBLY COMPLETE, NO ERRORS FOUND
