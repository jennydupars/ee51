8086/87/88/186 MACRO ASSEMBLER    TMRHNDLR                                                 19:20:20  10/29/;6  PAGE    1


DOS 5.0 (038-N) 8086/87/88/186 MACRO ASSEMBLER V3.1 ASSEMBLY OF MODULE TMRHNDLR
OBJECT MODULE PLACED IN TMRHNDLR.OBJ
ASSEMBLER INVOKED BY:  C:\UTIL\ASM86.EXE TMRHNDLR.ASM M1 DB EP


LOC  OBJ                  LINE     SOURCE

                             1             NAME            TMRHNDLR
                             2             
                             3     ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
                             4     ;                                                                            ;
                             5     ;                                                                TIMER HANDLERS      
                                                           ;
                             6     ;                                  Homework 4                                    ;
                             7     ;                                   EE/CS 51                                 ;
                             8     ;                                                                            ;
                             9     ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
                            10     
                            11     ; This file includes . The included 
                            12     ; functions are: 
                            13     ;       TimerEventHandler - calls DisplayMUX repeatedly to sustain display 
                            14     ;       InstallTimerHandler - installs timer event handler for the timer interrupt 
                            15     
                            16     
                            17     
                            18     ;external function declarations
                            19     
                            20         EXTRN   DisplayMux:NEAR             ; multiplexing function for LED display
                            21     
                            22         
                            23 +1  $INCLUDE(handlers.inc)
                      =1    24     
                      =1    25     
                      =1    26     ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
                      =1    27     ;                                                                            ;
                      =1    28     ;                                  EHDEMO.INC                                ;
                      =1    29     ;                              Event Handler Demo                            ;
                      =1    30     ;                                 Include File                               ;
                      =1    31     ;                                                                            ;
                      =1    32     ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
                      =1    33     
                      =1    34     ; This file contains the definitions for the Event Handler Demonstration
                      =1    35     ; program (EHDEMO.ASM).
                      =1    36     ;
                      =1    37     
                      =1    38     
                      =1    39     ; Timer Definitions
                      =1    40     
                      =1    41     ; Addresses
  FF56                =1    42     Tmr0Ctrl        EQU     0FF56H          ;address of Timer 0 Control Register
  FF52                =1    43     Tmr0MaxCntA     EQU     0FF52H          ;address of Timer 0 Max Count A Register
  FF50                =1    44     Tmr0Count       EQU     0FF50H          ;address of Timer 0 Count Register
  FF66                =1    45     Tmr2Ctrl        EQU     0FF66H          ;address of Timer 2 Control Register
  FF62                =1    46     Tmr2MaxCnt      EQU     0FF62H          ;address of Timer 2 Max Count A Register
  FF60                =1    47     Tmr2Count       EQU     0FF60H          ;address of Timer 2 Count Register
                      =1    48     
                      =1    49     ; Control Register Values
8086/87/88/186 MACRO ASSEMBLER    TMRHNDLR                                                 19:20:20  10/29/;6  PAGE    2


LOC  OBJ                  LINE     SOURCE

  E001                =1    50     Tmr0CtrlVal     EQU     0E001H
                      =1    51                             ;0E009H          ;value to write to Timer 0 Control Register
                      =1    52                                             ;1---------------  enable timer
                      =1    53                                             ;-1--------------  write to control
                      =1    54                                             ;--1-------------  enable interrupts
                      =1    55                                             ;----000000------  reserved
                      =1    56                                             ;---0------0-----  read only
                      =1    57                                             ;-----------0----  TMRIN0 is an enable
                      =1    58                                             ;------------10--  count timer 2 outs
                      =1    59                                             ;--------------0-  single counter mode
                      =1    60                                             ;---------------1  continuous mode
  C001                =1    61     Tmr2CtrlVal     EQU     0C001H          ;value to write to Timer 2 Control Register
                      =1    62                                             ;1---------------  enable timer
                      =1    63                                             ;-1--------------  write to control
                      =1    64                                             ;--0-------------  no interrupts
                      =1    65                                             ;----000000-0000-  reserved
                      =1    66                                             ;---0------0-----  read only
                      =1    67                                             ;---------------1  continuous mode
                      =1    68     
                      =1    69     ; Interrupt Vectors
  0008                =1    70     Tmr0Vec         EQU     8               ;interrupt vector for Timer 0
                      =1    71     
                      =1    72     
                      =1    73     ; Interrupt Controller Definitions
                      =1    74     
                      =1    75     ; Addresses
  FF32                =1    76     INTCtrlrCtrl    EQU     0FF32H          ;address of interrupt controller for timer
  FF22                =1    77     INTCtrlrEOI     EQU     0FF22H          ;address of interrupt controller EOI register
                      =1    78     
                      =1    79     ; Register Values
  0001                =1    80     INTCtrlrCVal    EQU     00001H          ;set priority for timers to 1 and enable
                      =1    81                                             ;000000000000----  reserved
                      =1    82                                             ;------------0---  enable timer interrupt
                      =1    83                                             ;-------------001  timer priority
  0008                =1    84     TimerEOI        EQU     00008H          ;Timer EOI command (same for all timers)
  8000                =1    85     NonSpecEOI      EQU     08000H          ;Non-specific EOI command
                      =1    86     
                      =1    87     
                      =1    88     ; Chip Select Unit Definitions
                      =1    89     
                      =1    90     ; Addresses
  FFA4                =1    91     PACSreg         EQU     0FFA4H          ;address of PACS register
  FFA8                =1    92     MPCSreg         EQU     0FFA8H          ;address of MPCS register
                      =1    93     
                      =1    94     ; Control Register Values
  0003                =1    95     PACSval         EQU     00003H          ;PCS base at 0, 3 wait states
                      =1    96                                             ;0000000000------  starts at address 0
                      =1    97                                             ;----------000---  reserved
                      =1    98                                             ;-------------0--  wait for RDY inputs
                      =1    99                                             ;--------------11  3 wait states
  0183                =1   100     MPCSval         EQU     00183H          ;PCS in I/O space, use PCS5/6, 3 wait states
                      =1   101                                             ;0---------000---  reserved
                      =1   102                                             ;-0000001--------  MCS is 8KB
                      =1   103                                             ;--------1-------  output PCS5/PCS6
                      =1   104                                             ;---------0------  PCS in I/O space
8086/87/88/186 MACRO ASSEMBLER    TMRHNDLR                                                 19:20:20  10/29/;6  PAGE    3


LOC  OBJ                  LINE     SOURCE

                      =1   105                                             ;-------------0--  wait for RDY inputs
                      =1   106                                             ;--------------11  3 wait states
                      =1   107     
                      =1   108     
                      =1   109     
                      =1   110     ; Timing Definitions
                      =1   111     
  0900                =1   112     COUNTS_PER_MS   EQU     2304            ;number of timer counts per 1 ms (assumes 18.
                                   432 MHz clock)
  00C8                =1   113     MS_PER_SEG      EQU     200             ;number of ms for each segment
                      =1   114     
                      =1   115     
                      =1   116     
                      =1   117     ; General Definitions
                      =1   118     
  0001                =1   119     FIRST_RESERVED_VEC      EQU     1       ;reserve vectors 1-3
  0003                =1   120     LAST_RESERVED_VEC       EQU     3
  0100                =1   121     NUM_IRQ_VECTORS         EQU     256     ;number of interrupt vectors
                      =1   122     
  0080                =1   123     LEDDisplay      EQU     0080H           ;display address
                      =1   124     
  0008                =1   125     NUM_DIGITS      EQU     8               ;number of digits in the display
                           126     
                           127     CGROUP  GROUP   CODE
                           128     
----                       129     CODE    SEGMENT PUBLIC 'CODE'
                           130     
                           131             ASSUME  CS:CGROUP
                           132         
                           133         
                           134         
                           135     ; TimerEventHandler 
                           136     ;
                           137     ; Description:          This function is the event handler for the timer 
                           138     ;                                       interrupts. It outputs the next pattern 
                           139     ;                                       to the LED display by calling DisplayMux.
                           140     ;
                           141     ; Operation:            This function calls DisplayMux, which displays the 
                           142     ;                                       current digit to be displayed, as stored by t
                                   he variable 
                           143     ;                                       muxCounter.     
                           144     ;
                           145     ; Arguments:            None.
                           146     ; Return Value:         None.
                           147     ; Local Variables:      None. 
                           148     ; Shared Variables: None. 
                           149     ; Global Variables: None. 
                           150     ; Input:                        None. 
                           151     ; Output:                       A part of a digit will be displayed on the LED displa
                                   y.
                           152     ; Error Handling:       None.
                           153     ; Algorithms:           None.
                           154     ; Data Structures:      None.
                           155     ;
                           156     
8086/87/88/186 MACRO ASSEMBLER    TMRHNDLR                                                 19:20:20  10/29/;6  PAGE    4


LOC  OBJ                  LINE     SOURCE

                           157         
0000                       158     TimerEventHandler       PROC    NEAR
                           159                             PUBLIC  TimerEventHandler
                           160     
0000                       161     StartTimerEventHandler:
0000 50                    162         PUSH    AX                      ; save the registers
0001 53                    163         PUSH    BX
0002 52                    164         PUSH    DX  
                           165         
0003                       166     CallDisplayMux:
0003 E80000         E      167         CALL    DisplayMux              ; call DisplayMux once to flash one digit
                           168     
0006                       169     EndTimerEventHandler:
0006 BA22FF                170         MOV     DX, INTCtrlrEOI         ;send the EOI to the interrupt controller
0009 B80800                171         MOV     AX, TimerEOI
000C EE                    172         OUT     DX, AL                  
                           173         
000D 5A                    174         POP     DX                      ;restore the registers
000E 5B                    175         POP     BX
000F 58                    176         POP     AX
                           177     
                           178     
0010 CF                    179         IRET                            ;return (Event Handlers end with IRET not RET)
                           180     
                           181     TimerEventHandler   ENDP
                           182     
                           183         
                           184     ;
                           185     ;
                           186     ;
                           187     ; InstallTimerHandler 
                           188     ;
                           189     ; Description:          This function installs the event handler for the timer 
                           190     ;                                       interrupt. It is based on Glen's code. 
                           191     ;                       
                           192     ; Operation:            The event handler address is written to the timer 
                           193     ;                                       interrupt vector. 
                           194     ;
                           195     ; Arguments:            None. 
                           196     ; Return Value:         None. 
                           197     ; Local Variables:      None. 
                           198     ; Shared Variables: None. 
                           199     ; Global Variables: None. 
                           200     ; Input:                        None. 
                           201     ; Output:                       None. 
                           202     ; Error Handling:       None.
                           203     ; Algorithms:           None.
                           204     ; Data Structures:      None.
                           205     ;
                           206     ; Pseudocode:
                           207             
                           208             
0011                       209     InstallTimerHandler  PROC    NEAR
                           210                          PUBLIC  InstallTimerHandler
                           211     
8086/87/88/186 MACRO ASSEMBLER    TMRHNDLR                                                 19:20:20  10/29/;6  PAGE    5


LOC  OBJ                  LINE     SOURCE

0011                       212     StartInstallTimerHandler:
0011 33C0                  213             XOR     AX, AX          ;clear ES (interrupt vectors are in segment 0)
0013 8EC0                  214             MOV     ES, AX
                           215                                     ;store the vector
0015 26C70620000000 R      216             MOV     ES: WORD PTR (4 * Tmr0Vec), OFFSET(TimerEventHandler)
001C 26C7062200---- R      217             MOV     ES: WORD PTR (4 * Tmr0Vec + 2), SEG(TimerEventHandler)
                           218     
                           219     
0023 C3                    220             RET                     ;all done, return
                           221     
                           222     
                           223     InstallTimerHandler  ENDP
                           224     
                           225     
----                       226     CODE        ENDS
                           227        
                           228         END

ASSEMBLY COMPLETE, NO ERRORS FOUND
