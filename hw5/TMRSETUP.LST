8086/87/88/186 MACRO ASSEMBLER    TMRSETUP                                                 17:02:42  11/04/;6  PAGE    1


DOS 5.0 (038-N) 8086/87/88/186 MACRO ASSEMBLER V3.1 ASSEMBLY OF MODULE TMRSETUP
OBJECT MODULE PLACED IN TMRSETUP.OBJ
ASSEMBLER INVOKED BY:  C:\UTIL\ASM86.EXE TMRSETUP.ASM M1 DB EP


LOC  OBJ                  LINE     SOURCE

                             1             NAME            TMRSETUP
                             2             
                             3     ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
                             4     ;                                                                            ;
                             5     ;                                                                 Timer Setup        
                                                           ;
                             6     ;                                  Homework 5                                    ;
                             7     ;                                   EE/CS 51                                 ;
                             8     ;                                                                            ;
                             9     ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
                            10     
                            11     ; This file includes functions that handle interrupts and timing for the keypad. 
                            12     ; The included functions are: 
                            13     ;       TimerEventHandler - calls KeypadMux at interrupts to repeatedly check for inp
                                   ut 
                            14     ;       InstallTimerHandler - installs timer event handler for the timer interrupt 
                            15     
                            16     
                            17     ; Revision History:
                            18     ;     11/02/16          Jennifer Du      initial revision
                            19     
                            20     ;external function declarations
                            21     
                            22         EXTRN   KeypadMux:NEAR             ; function for repeatedly checking input 
                            23     
                            24         
                            25     ; include files 
                            26     ;$INCLUDE(handlers.inc)                                 ; include file for handlers, 
                                   interrupts, timers 
                            27 +1  $INCLUDE(timers.inc)
                      =1    28     
                      =1    29     
                      =1    30     ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
                      =1    31     ;                                                                            ;
                      =1    32     ;                                 TIMERS.INC                               ;
                      =1    33     ;                                 Include File                               ;
                      =1    34     ;                                                                            ;
                      =1    35     ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
                      =1    36     
                      =1    37     ; Timer Definitions
                      =1    38     
                      =1    39     ; Addresses
  FF56                =1    40     Tmr0Ctrl        EQU     0FF56H          ;address of Timer 0 Control Register
  FF52                =1    41     Tmr0MaxCntA     EQU     0FF52H          ;address of Timer 0 Max Count A Register
  FF50                =1    42     Tmr0Count       EQU     0FF50H          ;address of Timer 0 Count Register
                      =1    43     
                      =1    44     ; Control Register Values
  E001                =1    45     Tmr0CtrlVal     EQU     0E001H
                      =1    46                             ;0E009H          ;value to write to Timer 0 Control Register
                      =1    47                                             ;1---------------  enable timer
8086/87/88/186 MACRO ASSEMBLER    TMRSETUP                                                 17:02:42  11/04/;6  PAGE    2


LOC  OBJ                  LINE     SOURCE

                      =1    48                                             ;-1--------------  write to control
                      =1    49                                             ;--1-------------  enable interrupts
                      =1    50                                             ;----000000------  reserved
                      =1    51                                             ;---0------0-----  read only
                      =1    52                                             ;-----------0----  TMRIN0 is an enable
                      =1    53                                             ;------------10--  count timer 2 outs
                      =1    54                                             ;--------------0-  single counter mode
                      =1    55                                             ;---------------1  continuous mode
                      =1    56     
                      =1    57     
                      =1    58     ; Interrupt Vectors
  0008                =1    59     Tmr0Vec         EQU     8               ;interrupt vector for Timer 0
                      =1    60     
                      =1    61     
                      =1    62     ; Interrupt Controller Definitions
                      =1    63     
                      =1    64     ; Addresses
  FF32                =1    65     INTCtrlrCtrl    EQU     0FF32H          ;address of interrupt controller for timer
  FF22                =1    66     INTCtrlrEOI     EQU     0FF22H          ;address of interrupt controller EOI register
                      =1    67     
                      =1    68     ; Register Values
  0001                =1    69     INTCtrlrCVal    EQU     00001H          ;set priority for timers to 1 and enable
                      =1    70                                             ;000000000000----  reserved
                      =1    71                                             ;------------0---  enable timer interrupt
                      =1    72                                             ;-------------001  timer priority
  0008                =1    73     TimerEOI        EQU     00008H          ;Timer EOI command (same for all timers)
  8000                =1    74     NonSpecEOI      EQU     08000H          ;Non-specific EOI command
                      =1    75     
                      =1    76     
                      =1    77     ; Timing Definitions
                      =1    78     
  0900                =1    79     COUNTS_PER_MS   EQU     2304            ;number of timer counts per 1 ms (assumes 18.
                                   432 MHz clock)
  00C8                =1    80     MS_PER_SEG      EQU     200             ;number of ms for each segment
                      =1    81     
                            82     
                            83     CGROUP  GROUP   CODE
                            84     
----                        85     CODE    SEGMENT PUBLIC 'CODE'
                            86     
                            87             ASSUME  CS:CGROUP
                            88         
                            89         
                            90         
                            91     ; TimerEventHandler 
                            92     ;
                            93     ; Description:          This function is the event handler for the timer 
                            94     ;                                       interrupts. It outputs the next pattern 
                            95     ;                                       to the LED display by calling DisplayMux when
                                   ever 
                            96     ;                                       interrupted. 
                            97     ;
                            98     ; Operation:            This function calls DisplayMux, which displays the 
                            99     ;                                       current digit to be displayed, as stored by t
                                   he variable 
8086/87/88/186 MACRO ASSEMBLER    TMRSETUP                                                 17:02:42  11/04/;6  PAGE    3


LOC  OBJ                  LINE     SOURCE

                           100     ;                                       currentSeg.     
                           101     ;
                           102     ; Arguments:            None.
                           103     ; Return Value:         None.
                           104     ; Local Variables:      None. 
                           105     ; Shared Variables: None. 
                           106     ; Global Variables: None. 
                           107     ; Input:                        None. 
                           108     ; Output:                       A digit will be displayed on the LED display.
                           109     ; Error Handling:       None.
                           110     ; Algorithms:           None.
                           111     ; Data Structures:      None.
                           112     ;
                           113     
                           114         
0000                       115     TimerEventHandler       PROC    NEAR
                           116                             PUBLIC  TimerEventHandler
                           117     
0000                       118     StartTimerEventHandler:
0000 50                    119         PUSH    AX                      ; save the registers
0001 53                    120         PUSH    BX
0002 52                    121         PUSH    DX  
                           122         
0003                       123     CallKeypadMux:
0003 E80000         E      124         CALL    KeypadMux               ; call KeypadMux to check for inputs 
                           125     
0006                       126     EndTimerEventHandler:
0006 BA22FF                127         MOV     DX, INTCtrlrEOI         ;send the EOI to the interrupt controller
0009 B80800                128         MOV     AX, TimerEOI
000C EE                    129         OUT     DX, AL                  
                           130         
000D 5A                    131         POP     DX                      ;restore the registers
000E 5B                    132         POP     BX
000F 58                    133         POP     AX
                           134     
                           135     
0010 CF                    136         IRET                            ;return (Event Handlers end with IRET not RET)
                           137     
                           138     TimerEventHandler   ENDP
                           139     
                           140         
                           141     ;
                           142     ;
                           143     ;
                           144     ; InstallTimerHandler 
                           145     ;
                           146     ; Description:          This function installs the event handler for the timer 
                           147     ;                                       interrupt. It is based on Glen's code. 
                           148     ;                       
                           149     ; Operation:            The event handler address is written to the timer 
                           150     ;                                       interrupt vector. 
                           151     ;
                           152     ; Arguments:            None. 
                           153     ; Return Value:         None. 
                           154     ; Local Variables:      None. 
8086/87/88/186 MACRO ASSEMBLER    TMRSETUP                                                 17:02:42  11/04/;6  PAGE    4


LOC  OBJ                  LINE     SOURCE

                           155     ; Shared Variables: None. 
                           156     ; Global Variables: None. 
                           157     ; Input:                        None. 
                           158     ; Output:                       None. 
                           159     ; Error Handling:       None.
                           160     ; Algorithms:           None.
                           161     ; Data Structures:      None.
                           162     ;       
                           163             
0011                       164     InstallTimerHandler  PROC    NEAR
                           165                          PUBLIC  InstallTimerHandler
                           166     
0011                       167     StartInstallTimerHandler:
                           168             
0011 33C0                  169                     XOR     AX, AX          ;clear ES (interrupt vectors are in segment 0
                                   )
0013 8EC0                  170             MOV     ES, AX
                           171                                     ;store the vector
0015 26C70620000000 R      172             MOV     ES: WORD PTR (4 * Tmr0Vec), OFFSET(TimerEventHandler)
001C 26C7062200---- R      173             MOV     ES: WORD PTR (4 * Tmr0Vec + 2), SEG(TimerEventHandler)
                           174     
0023 C3                    175             RET                     ;all done, return
                           176                     
                           177     InstallTimerHandler  ENDP
                           178     
                           179     
                           180     
                           181     
                           182     ; This program is an event handler that manages interrupt service routines for 
                           183     ; the procedures for displaying strings on the LED display. The included 
                           184     ; functions are general enough to be used by functions other than the display 
                           185     ; functions. The included functions are: 
                           186     ;   InitTimer - initializes timer 
                           187     ;   InitCS  - initializes chip select
                           188     ;   ClrIRQVectors  - installs IllegalEventHandler for all invalid interrupts 
                           189     ;   IllegalEventHandler - sends EOI to interrupt handler to exit interrupt
                           190     
                           191                                                                     
                           192     ;       
                           193     ;       
                           194     ;
                           195     ; InitTimer  
                           196     ;
                           197     ; Description:          This function will initialize the timer. The 
                           198     ;                                       timer will be initialized to generate interru
                                   pts every
                           199     ;                                       MS_PER_SEG milliseconds. The interrupt contro
                                   ller is 
                           200     ;                                       also initialized here to allow the timer inte
                                   rrupts. 
                           201     ;                                       The timer counts MS_PER_SEG long intervals to
                                    generate 
                           202     ;                                       the interrupts. This function is based on Gle
                                   n's code. 
                           203     ;
8086/87/88/186 MACRO ASSEMBLER    TMRSETUP                                                 17:02:42  11/04/;6  PAGE    5


LOC  OBJ                  LINE     SOURCE

                           204     ; Operation:            The appropriate values are written to the timer control 
                           205     ;                                       registers in the PCB. The timer count registe
                                   rs are set 
                           206     ;                                       to zero. The interrupt controller is set up t
                                   o accept 
                           207     ;                                       timer interrupts and any pending interrupts a
                                   re cleared
                           208     ;                                       by sending a TimerEOI to the interrupt contro
                                   ller. 
                           209     ;       
                           210     ; Arguments:            None.
                           211     ; Return Value:         None.
                           212     ; Local Variables:      None.
                           213     ; Shared Variables: None. 
                           214     ; Global Variables: None.
                           215     ; Input:                        None. 
                           216     ; Output:                       None.
                           217     ; Error Handling:       None.
                           218     ; Algorithms:           None.
                           219     ; Data Structures:      None.
                           220     ;
0024                       221     InitTimer       PROC    NEAR
                           222                     PUBLIC  InitTimer
                           223            
                           224     
                           225                                     ;initialize Timer #0 for MS_PER_SEG ms interrupts
0024 BA50FF                226             MOV     DX, Tmr0Count   ;initialize the count register to 0
0027 33C0                  227             XOR     AX, AX
0029 EE                    228             OUT     DX, AL
                           229     
002A BA52FF                230             MOV     DX, Tmr0MaxCntA ;setup max count for milliseconds per segment
002D B80009                231             MOV     AX, COUNTS_PER_MS  ;   count so can time the segments
0030 EE                    232             OUT     DX, AL
                           233     
0031 BA56FF                234             MOV     DX, Tmr0Ctrl    ;setup the control register, interrupts on
0034 B801E0                235             MOV     AX, Tmr0CtrlVal
0037 EE                    236             OUT     DX, AL
                           237     
                           238                                     ;initialize interrupt controller for timers
0038 BA32FF                239             MOV     DX, INTCtrlrCtrl;setup the interrupt control register
003B B80100                240             MOV     AX, INTCtrlrCVal
003E EE                    241             OUT     DX, AL
                           242     
003F BA22FF                243             MOV     DX, INTCtrlrEOI ;send a timer EOI (to clear out controller)
0042 B80800                244             MOV     AX, TimerEOI
0045 EE                    245             OUT     DX, AL
                           246     
                           247     
0046 C3                    248             RET                     ;done so return
                           249     
                           250     
                           251     InitTimer       ENDP
                           252     
----                       253     CODE        ENDS
                           254        
8086/87/88/186 MACRO ASSEMBLER    TMRSETUP                                                 17:02:42  11/04/;6  PAGE    6


LOC  OBJ                  LINE     SOURCE

                           255         END

ASSEMBLY COMPLETE, NO ERRORS FOUND
